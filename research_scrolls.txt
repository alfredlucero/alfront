React Resources I Found Useful:

- React Cheatsheet
https://devhints.io/react

- Scaling React Applications
https://www.smashingmagazine.com/2016/09/how-to-scale-react-applications/

- react-howto repo
https://github.com/petehunt/react-howto

- (Paid) The Complete React Web App Developer Course
https://www.udemy.com/the-complete-react-web-app-developer-course/learn/v4/

- Tutorial: Intro to React
https://facebook.github.io/react/tutorial/tutorial.html

- React Boilerplate Github Repo
https://github.com/react-boilerplate/

- The Hitchhikers Guide to react-boilerplate
https://github.com/react-boilerplate/react-boilerplate/blob/master/docs/general/introduction.md

- Styled Components (CSS in Components) Repo and Website
https://github.com/styled-components/styled-components
https://www.styled-components.com/

- Styled Components: Enforcing Best Practices In Component-Based Systems
https://www.smashingmagazine.com/2017/01/styled-components-enforcing-best-practices-component-based-systems/

- The magic behind styled-components
https://mxstbr.blog/2016/11/styled-components-magic-explained/

- Storybook (Development UI Components)
https://github.com/storybooks/storybook

- Using React and jQuery together if you need to
http://tech.oyster.com/using-react-and-jquery-together/

- React First Steps
https://kolosek.com/react-first-steps/

- React Router Guide
https://reacttraining.com/react-router/web/guides/philosophy

- React Router v4 Tutorial
https://medium.com/@pshrmn/a-simple-react-router-v4-tutorial-7f23ff27adf

- Reach Router
https://reach.tech/router

- React/Redux Helpful Learning Resources
https://redux.js.org/docs/introduction/LearningResources.html

- React-Redux Links
https://github.com/markerikson/react-redux-links

- Five Tips for Working with Redux in Large Applications
https://techblog.appnexus.com/five-tips-for-working-with-redux-in-large-applications-89452af4fdcb

- Immutable.js
https://facebook.github.io/immutable-js/

- Defining Component APIs in React
http://jxnblk.com/writing/posts/defining-component-apis-in-react/

- Markdown for the Component Era (MDX)
https://mdxjs.com/

- MDX Slide Decks
https://github.com/jxnblk/mdx-deck

- Docz - MDX plus React Component documentation
https://www.docz.site/introduction/getting-started

- React Lifecycle Methods: How and When to Use Them
https://engineering.musefind.com/react-lifecycle-methods-how-and-when-to-use-them-2111a1b692b1

- React 16 Lifecycle Methods: How and When to Use Them
https://blog.bitsrc.io/react-16-lifecycle-methods-how-and-when-to-use-them-f4ad31fb2282



React Testing Resources I Found Useful:

- Snapshot testing React Components with Jest
https://hackernoon.com/snapshot-testing-react-components-with-jest-744a1e980366

- Testing React Components using render props
https://blog.kentcdodds.com/testing-%EF%B8%8F-components-using-render-props-5623ab1814c

- Testing React Components (Cosmos)
https://medium.com/@skidding/testing-react-components-30516bc6a1b3

- React Cosmos (Creating Fixtures for localStorage, state, props, fetch, reduxStore, etc.)
https://github.com/react-cosmos/react-cosmos

- The Right Way to Test React Components
https://medium.freecodecamp.org/the-right-way-to-test-react-components-548a4736ab22

- Difference between Shallow, Mount, Render in Enzyme
https://github.com/airbnb/enzyme/issues/465#issuecomment-227697726

- Jest Testing with Styled-Components and Enzyme
https://fastweb.media/blog/react-styled-jest-enzyme




Redux Resources I Found Useful:

- An Introduction to Redux
https://www.smashingmagazine.com/2016/06/an-introduction-to-redux/

- Getting Started with Redux
https://egghead.io/courses/getting-started-with-redux

- react-redux-start-kit repo
https://github.com/davezuko/react-redux-starter-kit

- Redux Saga Repo
https://github.com/redux-saga/redux-saga

- Redux Saga Beginner Tutorial
https://redux-saga.js.org/docs/introduction/BeginnerTutorial.html

- Reselect Repo
https://github.com/reactjs/reselect



Reason Resources I Found Useful:

- A First Reason React app for JavaScript developers
https://jamesfriend.com.au/a-first-reason-react-app-for-js-developers

- Reason Docs
https://reasonml.github.io/

- ReasonReact Docs
https://reasonml.github.io/reason-react/

- awesome-reasonml repo
https://github.com/vramana/awesome-reasonml



Elm Resources I Found Useful:

- An Introduction to Elm
https://guide.elm-lang.org/

- 5 Common JSON Decoders
https://robots.thoughtbot.com/5-common-json-decoders




Backbone Resources I Found Useful:

- Backbone.js Tips and Patterns
https://www.smashingmagazine.com/2013/08/backbone-js-tips-patterns/

- Marionette Guides
https://marionette.gitbooks.io/marionette-guides/content/en/index.html

- Marionette Documentation
https://marionettejs.com/docs/current/

- Marionette Explained: Connecting Data to your Views
https://benmccormick.org/2014/12/10/marionette-explained-connecting-your-data-to-your-views/

- A Visual Guide to Marionette.js Views
https://artandlogic.com/2013/03/a-visual-guide-to-marionette-js-views/

- Backbone.js Docs
http://backbonejs.org/#

- (Paid) Backbone Tutorial: Learn Backbonejs from Scratch
https://www.udemy.com/backbonejs-tutorial/learn/v4/overview



Ruby Resources I Found Useful:

- (Paid) The Complete Ruby on Rails Developer Course 
https://www.udemy.com/the-complete-ruby-on-rails-developer-course/learn/v4/content

- Ruby A Programmer's Best Friend
https://www.ruby-lang.org/en/

- Ruby Style Guide
https://github.com/bbatsov/ruby-style-guide

- Getting Started with RSpec
https://semaphoreci.com/community/tutorials/getting-started-with-rspec



CSS Resources I Found Useful:

- A Complete Guide to Flexbox
https://css-tricks.com/snippets/css/a-guide-to-flexbox/

- A Complete Guide to CSS Grid
https://css-tricks.com/snippets/css/complete-guide-grid/

- Grid by Example (CSS Grid)
https://gridbyexample.com/

- CSS Grid Garden (Game to help you learn CSS Grid)
http://cssgridgarden.com/

- CSS Flexbox Froggy (Game to help you learn CSS Flexbox)
http://flexboxfroggy.com/

- Understanding Flexbox: Everything you need to know
https://medium.freecodecamp.org/understanding-flexbox-everything-you-need-to-know-b4013d4dc9af

- How CSS Grid Beats Bootstrap
https://hackernoon.com/how-css-grid-beats-bootstrap-85d5881cf163

- Solved by Flexbox
https://philipwalton.github.io/solved-by-flexbox/

- CSS Grid Specification
https://www.w3.org/TR/css-grid-1/

- 11 Things I Learned Reading the CSS Grid Spec
https://medium.freecodecamp.org/11-things-i-learned-reading-the-css-grid-specification-fb3983aa5e0

- How to efficiently master the css grid in a jiffy
https://medium.com/flexbox-and-grids/how-to-efficiently-master-the-css-grid-in-a-jiffy-585d0c213577

- CSS Grid Playground by Mozilla
https://mozilladevelopers.github.io/playground/css-grid/

- CSS Grid Free Course by Wes Bos
https://cssgrid.io/

- Grid to Flex (CSS Grid/Flexbox Sample Layouts)
http://www.gridtoflex.com/

- Sass Cheatsheet
https://devhints.io/sass

- Sass Best Practices: Tips and Tools for developers
https://www.hongkiat.com/blog/sass-tips-tools-for-developers/

- Pros and Cons of Modular Sass
https://blog.planetargon.com/entries/the-pros-and-cons-of-modular-sass

- CSS Modules Welcome to the Future
https://glenmaddern.com/articles/css-modules

- CSS and Network Performance
https://csswizardry.com/2018/11/css-and-network-performance/

- Sass Style Guide
https://css-tricks.com/sass-style-guide/

- More opinionated Sass Guidelines
https://sass-guidelin.es/



General JS Resources/Libraries I Found Useful:

- ES6 Cheatsheet
https://devhints.io/es6

- Shepherd - Guide your users through a tour of your app (Repo)
https://github.com/HubSpot/shepherd

- fullPage.js - Fullscreen scrolling websites library
https://alvarotrigo.com/fullPage/

- Animated Icons with Mo.js
https://tympanus.net/Development/Animocons/

- Mo.js: Motion for the Web (Cool Animation Library for things like Burst)
http://mojs.io/

- Event Bubbling JavaScript Explained
https://www.sitepoint.com/event-bubbling-javascript/

- Google Web Fundamentals
https://developers.google.com/web/fundamentals/

- Basics of DOM Manipulation with Vanilla JavaScript
https://www.sitepoint.com/dom-manipulation-vanilla-javascript-no-jquery/

- JavaScript From Callbacks to Async Await
https://medium.freecodecamp.org/javascript-from-callbacks-to-async-await-1cc090ddad99

- Preparing for a Front-End Web Development Interview in 2017
http://davidshariff.com/blog/preparing-for-a-front-end-web-development-interview-in-2017/

- The Best Frontend JavaScript Interview Questions
https://performancejs.com/post/hde6d32/The-Best-Frontend-JavaScript-Interview-Questions-%28written-by-a-Frontend-Engineer%29

- 123 Essential JavaScript Interview Questions
https://github.com/ganqqwerty/123-Essential-JavaScript-Interview-Question

- 30 Interview Questions and Answers (Frontend Engineer)
https://medium.com/@sapy/7-interview-questions-and-answers-frontend-engineer-8b19f10697a4

- JS Interview Questions
http://www.thatjsdude.com/interview/js2.html

- 10 Interview Questions Every JavaScript Developer Should Know
https://medium.com/javascript-scene/10-interview-questions-every-javascript-developer-should-know-6fa6bdf5ad95

- 3 Questions To Watch Out For In A JavaScript Interview
https://medium.freecodecamp.org/3-questions-to-watch-out-for-in-a-javascript-interview-725012834ccb

- We have a problem with promises
https://pouchdb.com/2015/05/18/we-have-a-problem-with-promises.html

- 4 JavaScript Design Patterns You Should Know
https://scotch.io/bar-talk/4-javascript-design-patterns-you-should-know

- Comprehensive Guide JavaScript Design Patterns
https://www.toptal.com/javascript/comprehensive-guide-javascript-design-patterns

- Essential JavaScript Design Patterns Book by Addy Osmani
https://addyosmani.com/resources/essentialjsdesignpatterns/book/

- Throttling and Debouncing in JavaScript
https://medium.com/a-developers-perspective/throttling-and-debouncing-in-javascript-b01cad5c8edf

- JS The Right Way
http://jstherightway.org/#getting-started

- Idiomatic.js (How to write clean JavaScript)
https://github.com/rwaldron/idiomatic.js

- Functional Programming in JavaScript Exercises
http://reactivex.io/learnrx/

- Async Await David Walsh
https://davidwalsh.name/async-await

- Essential JS Design Patterns by Addi Osmani
https://addyosmani.com/resources/essentialjsdesignpatterns/book


GraphQL Resources I Found Useful:

- How to GraphQL
https://www.howtographql.com/



TypeScript Resources I Found Useful:

The Definitive Typescript Guide
https://www.sitepen.com/blog/update-the-definitive-typescript-guide/

Typescript Deep Dive
https://basarat.gitbooks.io/typescript/

Ultimate React Component Patterns with TypeScript 2.8
https://levelup.gitconnected.com/ultimate-react-component-patterns-with-typescript-2-8-82990c516935


Building Resources I Found Useful:

- How we built our first full stack javascript web app in three weeks
https://medium.com/ladies-storm-hackathons/how-we-built-our-first-full-stack-javascript-web-app-in-three-weeks-8a4668dbd67c

- Using Slack to Monitor Your App
https://www.smashingmagazine.com/2017/04/using-slack-monitor-app/

- Cypress: End to End Testing Framework (doesn't use Selenium)
https://www.cypress.io/

- NPM Tips
http://corgibytes.com/blog/2017/04/18/npm-tips/

Computer Network Resources I Found Useful: 

- HTTP/2 push is tougher than I thought
https://jakearchibald.com/2017/h2-push-tougher-than-i-thought/

- A Comprehensive Guide to HTTP/2 Server Push
https://www.smashingmagazine.com/2017/04/guide-http2-server-push/

- 12 Factor Apps (Best Practices for your App)
http://www.clearlytech.com/2014/01/04/12-factor-apps-plain-english/

- AWS Tips I Wish I'd Known Before I Started
https://wblinks.com/notes/aws-tips-i-wish-id-known-before-i-started/

- AWS Open Guides
https://github.com/open-guides/og-aws

- Adding Security Headers to CDN with Lambda@Edge
https://aws.amazon.com/blogs/networking-and-content-delivery/adding-http-security-headers-using-lambdaedge-and-amazon-cloudfront/



Testing/Build Resources I Found Useful:

- ESLint
https://eslint.org/

- CypressIO
https://www.cypress.io/

- WebdriverIO
http://webdriver.io/api.html

- Cypress vs. Selenium
https://automationrhapsody.com/cypress-vs-selenium-end-era/

- Karma Test Runner
http://karma-runner.github.io/2.0/index.html

- Jasmine Assertions
https://jasmine.github.io/2.0/introduction

- Mocha Test Runner
https://mochajs.org/#getting-started

- Chai Assertions
http://www.chaijs.com/api/

- Jest Test Runner
http://jestjs.io/docs/en/getting-started.html

- Enzyme
http://airbnb.io/enzyme/

- Enzyme Cheatsheet
https://devhints.io/enzyme

- Webpack - A Detailed Introduction
https://www.smashingmagazine.com/2017/02/a-detailed-introduction-to-webpack/

- (PAID) Webpack 2: The Complete Developer's Guide
https://www.udemy.com/webpack-2-the-complete-developers-guide/learn/v4/

- A Tale of Webpack 4 and how to finally configure it in the right way
https://hackernoon.com/a-tale-of-webpack-4-and-how-to-finally-configure-it-in-the-right-way-4e94c8e7e5c1

- CommonJS: Why and How
https://0fps.net/2013/01/22/commonjs-why-and-how/

- (PAID) Docker Mastery: The Complete Toolset From a Docker Captain
https://www.udemy.com/docker-mastery/learn/v4/overview

- (PAID) AWS Certified Developer Associate Course
https://www.udemy.com/aws-certified-developer-associate

- Majestic: Zero config UI for Jest
https://github.com/Raathigesh/majestic/

- Recipes (Testing different scenarios with Cypress)
https://docs.cypress.io/examples/examples/recipes.html

- Building Serverless Stack Application Tutorial
https://serverless-stack.com



General Frontend Web Resources I Found Useful:

- Frontend JavaScript Single Page Application Architecture
http://marcobotto.com/frontend-javascript-single-page-application-architecture/

- What's next for CSS?
https://jonathantneal.github.io/css-db/

- Design Systems Handbook
https://www.designbetter.co/design-systems-handbook

- Do's and Don'ts of Web Design
https://uxplanet.org/dos-and-don-ts-of-web-design-8c9d6a5de7c6

- Your First Progressive Web App
https://developers.google.com/web/fundamentals/getting-started/codelabs/your-first-pwapp/

- Service Workers: an Introduction
https://developers.google.com/web/fundamentals/getting-started/primers/service-workers

- Designers Guide to Web Performance Optimization
https://jonyablonski.com/2016/designers-guide-to-web-performance-optimization/

- Dirty Tricks From the Dark Corners of Front-end
https://www.smashingmagazine.com/2016/03/dirty-tricks-dark-corners-front-end-slides-pdf/

- Preload: What is it Good For?
https://www.smashingmagazine.com/2016/02/preload-what-is-it-good-for/

- Coolors: Color Scheme Generators
https://coolors.co/

- Codepen: Code Collaboration and Display
https://codepen.io

- Can I Use: Check browser compatibility for HTML/CSS features
http://caniuse.com

- Font Awesome: Free Icons to Use for your site
http://fontawesome.io/icons/

- Adding Google reCAPTCHA
https://developers.google.com/recaptcha/docs

- SEO Roadmap Udemy Course
https://udemy.com/seo-roadmap/learn/v4/overview

- When to use em vs. rem
https://webdesign.tutsplus.com/tutorials/comprehensive-guide-when-to-use-em-vs-rem--cms-23984

- CSS Quantum Engine of Mozilla Firefox
https://hacks.mozilla.org/2017/08/inside-a-super-fast-css-engine-quantum-css-aka-stylo/

- Firefox Devtools Debugger
https://mozilladevelopers.github.io/playground/debugger/

- Creative Gooey Effects
https://tympanus.net/Development/CreativeGooeyEffects/

- Animated Checkboxes
https://tympanus.net/Development/AnimatedCheckboxes/

- An Overview of SVG Sprite Creation Techniques
https://24ways.org/2014/an-overview-of-svg-sprite-creation-techniques/

- Google Advanced Learning Path
https://techdevguide.withgoogle.com/paths/advanced/how-to-read-existing-code/#!

- Using Service Workers
https://developer.mozilla.org/en-US/docs/Web/API/Service_Worker_API/Using_Service_Workers



Backend Resources I Found Useful:

- Firebase
https://firebase.google.com/

- DynamoDB Guide
https://www.dynamodbguide.com/what-is-dynamo-db/

- Common Rest Design Patterns
https://dzone.com/articles/common-rest-design-pattern


Cheatsheets I Found Useful:

- VSCode Shortcuts
https://code.visualstudio.com/shortcuts/keyboard-shortcuts-macos.pdf

- Vanilla JS Cheatsheet
https://gist.github.com/thegitfather/9c9f1a927cd57df14a59c268f118ce86


UI/UX Resources I Found Useful:

- Material UI Components
https://material-ui-next.com/

- Shopify Design System
https://polaris.shopify.com/principles/principles

- Design Systems Handbook
https://www.designbetter.co/design-systems-handbook

- Inclusive Components Design
https://inclusive-components.design/


Algorithms Resources:

- Recursion and Backtracking
https://www.hackerearth.com/practice/basic-programming/recursion/recursion-and-backtracking/tutorial/

- Coding Interviews For Dummies
https://medium.freecodecamp.org/coding-interviews-for-dummies-5e048933b82b

- Competitive Programming Book
https://cses.fi/book/book.pdf

- Solid Principles Every Developer Should Know
https://blog.bitsrc.io/solid-principles-every-developer-should-know-b3bfa96bb688


Infrastructure Resources:

- Introduction to Microservices
https://www.nginx.com/blog/introduction-to-microservices/



Dapp Resources:

- The Ultimate Ethereum Dapp Tutorial
http://www.dappuniversity.com/articles/the-ultimate-ethereum-dapp-tutorial

- Truffle Ethereum Overview
https://truffleframework.com/tutorials/ethereum-overview

- Truffle Pet Shop Basics Tutorial
https://truffleframework.com/tutorials/pet-shop

- Truffle Drizzle React Tutorial
https://truffleframework.com/tutorials/getting-started-with-drizzle-and-react
